<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>